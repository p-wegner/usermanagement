spring.application.name=keycloak-wrapper

# Docker Compose Configuration
spring.docker.compose.file=docker-compose.yml
spring.docker.compose.lifecycle-management=start_and_stop
spring.docker.compose.start.command=UP
spring.docker.compose.stop.command=DOWN
spring.docker.compose.start.timeout=60s
spring.docker.compose.readiness.timeout=30s
spring.docker.compose.shutdown.timeout=30s

# Keycloak Configuration
keycloak.auth-server-url=http://localhost:8081/
keycloak.realm=master
keycloak.resource=admin-cli
keycloak.credentials.secret=${KEYCLOAK_CLIENT_SECRET:your-client-secret}
keycloak.public-client=false
keycloak.ssl-required=external
keycloak.confidential-port=8443

# Test Configuration
spring.profiles.group.test=testcontainers
spring.docker.compose.enabled=${DOCKER_COMPOSE_ENABLED:true}
spring.docker.compose.skip.in-tests=true
testcontainers.reuse.enable=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# CORS Configuration
app.cors.allowed-origins=http://localhost:4200,http://localhost:8080

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.oauth.clientId=${KEYCLOAK_CLIENT_ID:admin-cli}
springdoc.swagger-ui.oauth.additionalQueryStringParams.response_type=code
springdoc.swagger-ui.oauth.useBasicAuthenticationWithAccessCodeGrant=true
